events {
    worker_connections 1024;
}

http {
    upstream keycloak {
        server keycloak:8080;
    }

    upstream api {
        server host.docker.internal:8000;
    }

    # HTTP server with routing
    server {
        listen 80;
        server_name localhost;

        location /api/ {
            proxy_pass http://api;
            proxy_redirect off;
        }

        location / {
            proxy_pass http://keycloak;
            proxy_redirect off;
        }
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server with TLS termination
    server {
        listen 443 ssl;
        http2 on;  # Modern syntax for nginx 1.25+
        server_name localhost;

        # SSL certificate configuration (replace with your actual certificates)
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;
        
        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Increase buffer sizes for Keycloak
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Set headers for proper proxying with HTTPS
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;

        location /api/ {
            proxy_pass http://api;
            proxy_redirect off;
        }

        location / {
            proxy_pass http://keycloak;
            proxy_redirect off;
        }
    }
}