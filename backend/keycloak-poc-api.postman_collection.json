{
	"info": {
		"_postman_id": "keycloak-poc-api-collection",
		"name": "Keycloak POC API",
		"description": "Complete API collection for Keycloak POC with authentication and user management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    pm.environment.set('refresh_token', response.refresh_token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('keycloak_id', response.user.keycloak_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    if (response.refresh_token) {",
									"        pm.environment.set('refresh_token', response.refresh_token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": ["{{base_url}}"],
							"path": ["auth", "refresh"]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": ["{{base_url}}"],
							"path": ["auth", "logout"]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": ["{{base_url}}"],
							"path": ["auth", "me"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Create User (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('created_user_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{new_username}}\",\n    \"email\": \"{{new_email}}\",\n    \"password\": \"{{new_password}}\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"department\": \"Engineering\",\n    \"role\": \"user\",\n    \"license_number\": \"LIC123456\",\n    \"npi_number\": \"1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": ["{{base_url}}"],
							"path": ["users", ""]
						}
					},
					"response": []
				},
				{
					"name": "List Users (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/?skip=0&limit=10",
							"host": ["{{base_url}}"],
							"path": ["users", ""],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Users with Filters (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/?skip=0&limit=10&department=Engineering&role=user&is_active=true",
							"host": ["{{base_url}}"],
							"path": ["users", ""],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "department",
									"value": "Engineering"
								},
								{
									"key": "role",
									"value": "user"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["users", "{{user_id}}"]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John Updated\",\n    \"last_name\": \"Doe Updated\",\n    \"department\": \"IT\",\n    \"license_number\": \"LIC654321\",\n    \"npi_number\": \"0987654321\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["users", "{{user_id}}"]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate User (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{created_user_id}}",
							"host": ["{{base_url}}"],
							"path": ["users", "{{created_user_id}}"]
						}
					},
					"response": []
				},
				{
					"name": "Get User Audit Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}/audit-logs?skip=0&limit=50",
							"host": ["{{base_url}}"],
							"path": ["users", "{{user_id}}", "audit-logs"],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "50"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api/v1",
			"type": "string"
		},
		{
			"key": "username",
			"value": "testuser",
			"type": "string"
		},
		{
			"key": "password",
			"value": "testpassword",
			"type": "string"
		},
		{
			"key": "new_username",
			"value": "newuser",
			"type": "string"
		},
		{
			"key": "new_email",
			"value": "newuser@example.com",
			"type": "string"
		},
		{
			"key": "new_password",
			"value": "newpassword123",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "keycloak_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_user_id",
			"value": "",
			"type": "string"
		}
	]
}
