"""Add session tables

Revision ID: 7a505ef7d95e
Revises:
Create Date: 2025-10-09 18:16:22.835231

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7a505ef7d95e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create sessions table
    op.create_table(
        "sessions",
        sa.Column(
            "session_id",
            sa.String(),
            nullable=False,
            comment="Session ID from Keycloak session_state or generated UUID",
        ),
        sa.Column(
            "userid", sa.String(), nullable=False, comment="User ID from JWT sub claim"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Session creation timestamp",
        ),
        sa.Column(
            "last_updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Last activity timestamp",
        ),
        sa.PrimaryKeyConstraint("session_id"),
    )
    op.create_index(op.f("ix_sessions_userid"), "sessions", ["userid"], unique=False)

    # Create session_events table
    op.create_table(
        "session_events",
        sa.Column(
            "event_id", sa.String(), nullable=False, comment="Unique event identifier"
        ),
        sa.Column(
            "session_id",
            sa.String(),
            nullable=False,
            comment="Reference to parent session",
        ),
        sa.Column(
            "userid",
            sa.String(),
            nullable=False,
            comment="User ID for query optimization",
        ),
        sa.Column(
            "event",
            sa.String(),
            nullable=False,
            comment="Event type: open_study, close_study, etc.",
        ),
        sa.Column(
            "studyid",
            sa.String(),
            nullable=True,
            comment="Study identifier for study-related events",
        ),
        sa.Column(
            "datetime",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Event occurrence timestamp",
        ),
        sa.Column(
            "source",
            sa.String(),
            nullable=False,
            comment="Source application triggering the event",
        ),
        sa.Column(
            "target",
            sa.ARRAY(sa.String()),
            nullable=True,
            comment="Target applications for event propagation",
        ),
        sa.Column(
            "event_data",
            sa.Text(),
            nullable=True,
            comment="JSON-encoded additional event data",
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.session_id"],
        ),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_index(
        op.f("ix_session_events_session_id"),
        "session_events",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_session_events_userid"), "session_events", ["userid"], unique=False
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop session_events table
    op.drop_index(op.f("ix_session_events_userid"), table_name="session_events")
    op.drop_index(op.f("ix_session_events_session_id"), table_name="session_events")
    op.drop_table("session_events")

    # Drop sessions table
    op.drop_index(op.f("ix_sessions_userid"), table_name="sessions")
    op.drop_table("sessions")

    # ### end Alembic commands ###
